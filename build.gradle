buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.314'
    }
}

plugins {
    id 'groovy'
    id 'idea'
    id 'java'
    id 'maven-publish'
}

group 'org.oreto'
version '2.1-SNAPSHOT'

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    mavenCentral()
}
sourceCompatibility = '1.8'

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.15'
    // graphl
    compile "com.graphql-java:graphql-java:+"
    compile 'com.github.grooviter:gql-core:0.3.3'

    // gorm
    compile "org.grails:grails-core:3.+"
    compile ("org.grails:grails-datastore-gorm-hibernate5:6.+") {
        exclude group: 'org.grails', module: 'grails-datastore-gorm-hibernate-core'
    }
    compile "org.grails:grails-datastore-gorm-hibernate-core:6.+"

    // logging
    compile 'org.apache.logging.log4j:log4j-api:2.+'
    compile 'org.apache.logging.log4j:log4j-core:2.+'
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.+"

    // other utils
    compile "javax.servlet:servlet-api:3.+"
    compile "org.grails:grails-plugin-converters:+"
    compile "com.owlike:genson:1.+"

    // testing
    testCompile (
        'junit:junit:4.12',
        'org.spockframework:spock-core:1.1-groovy-2.4',
        "com.graphql-java:graphql-java:+",
        'com.github.grooviter:gql-core:0.3.3'
    )
    testRuntime "com.h2database:h2:1.+"
    testRuntime "com.zaxxer:HikariCP:+"
}

import com.amazonaws.auth.*
import com.amazonaws.auth.profile.*

def fetchAwsCredentials = {
    try {
        return new ProfileCredentialsProvider().credentials
    } catch (Exception e) {
        logger.debug('Unable to retrieve AWS credentials from profile, publishing to S3 will not be available.', e)
        return null
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

publishing {
    repositories {
        maven {
            url "s3://org.oreto.maven/" + (version.contains('SNAPSHOT') ? "snapshots" : 'releases') as String
            credentials(AwsCredentials) {
                AWSCredentials awsCredentials = fetchAwsCredentials()
                accessKey = awsCredentials?.AWSAccessKeyId
                secretKey = awsCredentials?.AWSSecretKey
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}